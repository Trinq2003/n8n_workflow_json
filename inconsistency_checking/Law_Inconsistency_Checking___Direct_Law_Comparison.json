{
  "name": "Law Inconsistency Checking | Direct Law Comparison",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "http://172.17.0.1:180/api/v1/retrieval",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "question",
              "value": "={{ $json.chatInput }}"
            },
            {
              "name": "dataset_ids",
              "value": "={{ ['24517d3616e711f0a9e206880d3088f6'] }}"
            },
            {
              "name": "similarity_threshold",
              "value": "0.2"
            },
            {
              "name": "vector_similarity_weight",
              "value": "0.5"
            },
            {
              "name": "top_k",
              "value": "10"
            },
            {
              "name": "page_size",
              "value": "10"
            }
          ]
        },
        "options": {}
      },
      "id": "642c0d0e-3a14-4ca2-9dd2-dce88a3c9094",
      "name": "Retrieve From RAGFlow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -140,
        -40
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "v1yskh1LvTPwyPMf",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "var related_chunks = [];\nfor (let i=0; i<$input.all().length; i++) {\n  if ($input.all()[i].json.text === \"related\") {\n    chunk = $('Retrieve From RAGFlow').all()[0].json.data.chunks[i];\n    related_chunks.push(\n      {\n        'dataset_id': chunk.dataset_id,\n        'document_id': chunk.document_id,\n        'chunk_id': chunk.id,\n        'keywords': chunk.important_keywords,\n        'content': chunk.content\n      }\n    );\n  } \n}\n\nreturn related_chunks;"
      },
      "id": "a59a6d13-1dcc-4b41-9ccf-d16e05415942",
      "name": "Filter Retrieved Chunks",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        700,
        -40
      ]
    },
    {
      "parameters": {
        "options": {
          "separator": "\\n"
        }
      },
      "id": "e0cb7f3b-a546-402f-b0e1-f71fe7a1a3da",
      "name": "Retrieval Decide",
      "type": "@n8n/n8n-nodes-langchain.outputParserItemList",
      "typeVersion": 1,
      "position": [
        660,
        440
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<query>\n{{ $('User Query').item.json.chatInput }}\n</query>\n\n<context>\n{{ $json.data.chunks.map((item, index) => `${index+1}.\\n=========\\n ${item.content}\\n=========\\n`).join(\"\\n\") }}\n</context>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=As an expert Vietnamese lawyer, your task is to determine which law applies to a specific query. You need to ensure that the laws you consider are consistent.\n<instruction>\nYou will be provided with a query and a list of five relevant contexts (all written in Vietnamese). Carefully read through each context and decide whether it is directly relevant to the query.\n</instruction>\n<output>\nYour output should indicate \"related\" or \"unrelated\" for each context, with each response on a separate line. The number of line MUST match the number of official laws.\n</output>\n"
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=<query>\nTrường hợp ngang nhau thì bên có ý kiến của Chủ tịch Hội sẽ được chấp thuận. 3. Ban Chấp hành có nhiệm vụ và quyền hạn sau đây: a) Quyết định các biện pháp thực hiện nghị quyết, chương trình hoạt động trong nhiệm kỳ của Đại hội; b) Quyết định chương trình, kế hoạch công tác hàng năm hoặc giữa các kỳ họp của Ban Chấp hành; c) Thông qua kế hoạch và quyết toán tài chính nhiệm kỳ và hàng năm của Hội;\n</query>\n\n<context>\n1. V. Hồ sơ, gồm: Điều 14. Ban Chấp hành Hội (hoặc tên gọi khác) 3. Nguyên tắc hoạt động của Ban Chấp hành: d) Các nghị quyết, quyết định của Ban Chấp hành được thông qua khi có trên ... tổng số ủy viên Ban Chấp hành dự họp biểu quyết tán thành. Trong trường hợp số ý kiến tán thành và không tán thành ngang nhau thì quyết định thuộc về bên có ý kiến của Chủ tịch Hội. Điều 15. Ban Thường vụ Hội (hoặc tên gọi khác) 1. Ban Thường vụ Hội do Ban Chấp hành bầu trong số các ủy viên Ban Chấp hành; Ban Thường vụ Hội gồm: Chủ tịch, các Phó Chủ tịch và các ủy viên. Số lượng, cơ cấu, tiêu chuẩn ủy viên Ban Thường vụ do Ban Chấp hành quyết định. Nhiệm kỳ của Ban Thường vụ cùng với nhiệm kỳ Đại hội. 2. Nhiệm vụ và quyền hạn của Ban Thuờng vụ:\n\n\n2. Điều 13. Ban Chấp hành Trung ương Hội 2. Ban Chấp hành hoạt động theo Quy chế và Điều lệ Hội. Ban Chấp hành họp thường kỳ mỗi năm một lần; khi cần thiết có thể họp bất thường. Các quyết định, nghị quyết của Ban Chấp hành được thông qua và có hiệu lực khi có trên 50% tổng số ủy viên chính thức dự họp tán thành. Trường hợp ngang nhau thì bên có ý kiến của Chủ tịch Hội sẽ được chấp thuận. 3. Ban Chấp hành có nhiệm vụ và quyền hạn sau đây: a) Quyết định các biện pháp thực hiện nghị quyết, chương trình hoạt động trong nhiệm kỳ của Đại hội; b) Quyết định chương trình, kế hoạch công tác hàng năm hoặc giữa các kỳ họp của Ban Chấp hành; c) Thông qua kế hoạch và quyết toán tài chính nhiệm kỳ và hàng năm của Hội;\n\n\n3. Điều 14. Ban Chấp hành Hội 4. Nguyên tắc hoạt động của Ban Chấp hành: d) Các nghị quyết, quyết định của Ban Chấp hành được thông qua khi có trên 1/2 (một phần hai) tổng số ủy viên Ban Chấp hành tham gia dự họp biểu quyết tán thành. Trường hợp số ý kiến tán thành và không tán thành ngang nhau thì quyết định thuộc về bên có ý kiến của Chủ tịch Hội. Điều 15. Ban Thường vụ Hội 1. Ban Thường vụ Hội do Ban Chấp hành bầu trong số các ủy viên Ban Chấp hành; Ban Thường vụ Hội gồm: Chủ tịch, các Phó Chủ tịch, Tổng thư ký và các ủy viên. Số lượng, cơ cấu, tiêu chuẩn ủy viên Ban Thường vụ do Ban Chấp hành Hội quyết định. Nhiệm kỳ của Ban Thường vụ cùng với nhiệm kỳ Đại hội. 2. Nhiệm vụ, quyền hạn của Ban Thường vụ:\n\n\n4. V. Hồ sơ, gồm: Điều 14. Ban Chấp hành Hội (hoặc tên gọi khác) 3. Nguyên tắc hoạt động của Ban Chấp hành: d) Các nghị quyết, quyết định của Ban Chấp hành được thông qua khi có trên ... tổng số ủy viên Ban Chấp hành dự họp biểu quyết tán thành. Trong trường hợp số ý kiến tán thành và không tán thành ngang nhau thi quyết định thuộc về bên có ý kiến của Chủ tịch Hội. Điều 15. Ban Thường vụ Hội (hoặc tên gọi khác) 1- Ban Thường vụ Hội do Ban Chấp hành bầu trong số các ủy viên Ban Chấp hành; Ban Thường vụ Hội gồm: Chủ tịch, các Phó Chủ tịch và các ủy viên, số lượng, cơ cấu, tiêu chuẩn ủy viên Ban Thường vụ do Ban Chấp hành quyết định. Nhiệm kỳ của Ban Thường vụ cùng với nhiệm kỳ Đại hội. 2. Nhiệm vụ và quyền hạn của Ban Thường vụ:\n\n\n5. Điều 14. Ban Chấp hành Hội 4. Nguyên tắc hoạt động của Ban Chấp hành: b) Các cuộc họp của Ban Chấp hành được xem là hợp lệ khi có 2/3 (hai phần ba) số lượng ủy viên Ban Chấp hành tham gia dự họp. Ban Chấp hành biểu quyết theo nguyên tắc quá bán, thiểu số phục tùng đa số. Trong trường hợp biểu quyết ngang nhau thì quyết định thuộc về bên có ý kiến của Chủ tịch Hội hoặc người chủ trì hội nghị. Ban Chấp hành có thể biểu quyết bằng hình thức giơ tay hoặc bỏ phiếu kín. Việc quy định hình thức biểu quyết họp Ban Chấp hành do Ban Chấp hành Hội quyết định; c) Giữa hai kỳ họp Ban Chấp hành để quyết định các vấn đề thuộc thẩm quyền của Ban Chấp hành có thể hội ý, thảo luận, thông qua lấy ý kiến bằng văn bản;\n</context>"
            },
            {
              "type": "AIMessagePromptTemplate",
              "message": "=related\nunrelated\nrelated\nrelated\nunrelated"
            }
          ]
        }
      },
      "id": "fa7abefc-c337-4be3-a073-bb3a6cbbc238",
      "name": "Decide Relevant Content",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        320,
        -40
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gemma-3-it",
          "mode": "list",
          "cachedResultName": "gemma-3-it"
        },
        "options": {
          "maxRetries": 10
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        260,
        500
      ],
      "id": "31cbc9e9-bf54-41a3-a1c1-2fcee4934ac3",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "aYqxtLP59EnYukSK",
          "name": "Xinfer"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"potential_conflict\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"reason\": {\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1180,
        420
      ],
      "id": "18e0b031-7823-4f40-9afd-de40ff935717",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<proposal_law>\n{{ $('User Query').first().json.chatInput }}\n</proposal_law>\n\n<official_law>\n{{ $json.content }}\n</official_law>\n\n<instruction>\nAs an expert Vietnamese lawyer, your task is to check for any conflict between a proposal law and an official law.\n\nYou will be provided an input of the following form:\n```\n<proposal_law>\n# The proposal law will be given here, written in Vietnamese\n</proposal_law>\n\n<official_law>\n# A related official law will be given here, written in Vietnamese\n</official_law>\n```\n<\\instruction>\n\n<output>\nYour task is to reason and decide if any conflict can happen with the proposal law. You will output a JSON with the format given below:\n```json\n[\n  {\n    \"potential_conflict\": \"Write the potential conflict clearly and concisely in Vietnamese\",\n    \"reason\": \"The reason why the conflict may happen in Vietnamese\"\n  }\n]\n```\n<\\output>",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are a Vietnamese lawyer whose expertise in law inconsistency checking and always use Vietnamese to response."
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        920,
        -40
      ],
      "id": "6fee2c51-09b7-467d-95ef-5593ab5fbf64",
      "name": "Law Consistency Checker"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Proposal Law Fast Comparison</title>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"proposal_law\">\n      <h1>Luật dự thảo</h1>\n      <blockquote>\n        {{ $('User Query').first().json.chatInput }}\n      </blockquote>\n    </div>\n    <div>\n      <h1>So sánh trực tiếp</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Luật hiện hành</th>\n            <th>Mâu thuẫn với luạt dự thảo</th>\n            <th>Phân tích mâu thuẫn</th>\n          </tr>\n        </thead>\n        <tbody>\n          {{ $json.analyze }}\n        </tbody>\n      </table>\n    </div>\n  </div>\n</body>\n</html>\n\n<style>\n  .container {\n    background-color: #ffffff;\n    text-align: center;\n    padding: 16px;\n    border-radius: 8px;\n  }\n  \n  h1 {\n    color: #ff6d5a;\n    font-size: 24px;\n    font-weight: bold;\n    padding: 8px;\n  }\n  \n  h2 {\n    color: #909399;\n    font-size: 18px;\n    font-weight: bold;\n    padding: 8px;\n  }\n  \n  blockquote {\n    font-style: italic;\n    margin: 20px;\n    padding: 10px;\n    border-left: 2px solid #ccc;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  th, td {\n    border: 1px solid #ccc;\n    padding: 8px;\n    text-align: left;\n  }\n\n  th {\n    background-color: #f2f2f2;\n  }\n\n  tr:nth-child(even) {\n    background-color: #f9f9f9\n  }\n</style>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1860,
        -40
      ],
      "id": "984e9c8e-a27f-4067-907c-2493747691c9",
      "name": "HTML"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        980,
        200
      ],
      "id": "e906770e-c2a9-47d9-b552-6d61875df441",
      "name": "Auto-fixing Output Parser"
    },
    {
      "parameters": {
        "jsCode": "const list_of_official_laws = $('Filter Retrieved Chunks').all().map(item=>item.json.content);\nconst list_of_conflict_and_reason = $('Law Consistency Checker').all().map(item=>item.json.output[0]);\nvar list_of_law_comparison = [];\nfor (let i=0; i<list_of_official_laws.length; i++) {\n  list_of_law_comparison.push(\n    {\n      'official_law': list_of_official_laws[i],\n      'potential_conflict': list_of_conflict_and_reason[i].potential_conflict,\n      'reason': list_of_conflict_and_reason[i].reason\n    }\n  );\n}\n\nreturn list_of_law_comparison;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1320,
        -40
      ],
      "id": "28abed5d-4d5b-47fd-a46e-2fdf547fd7e9",
      "name": "Analyze Answers"
    },
    {
      "parameters": {
        "jsCode": "let html_code = {\n  analyze: \"\"\n};\n\n$input.all().forEach(item => {\n  html_code.analyze += `\n  <tr>\n    <td>${item.json.official_law}</td>\n    <td>${item.json.potential_conflict}</td>\n    <td>${item.json.reason}</td>\n  </tr>\n  `\n  }\n);\n\nreturn [html_code];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -40
      ],
      "id": "fcfe6e6d-cfcf-4edc-972e-ed68e8dd7bb3",
      "name": "Convert to HTML"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "chatInput"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -460,
        -40
      ],
      "id": "3f1f9ac1-b760-4653-80ee-5000f58d0d25",
      "name": "User Query"
    }
  ],
  "pinData": {
    "User Query": [
      {
        "json": {
          "chatInput": "Đất lâm nghiệp được quy định là đất bao gồm nhà cửa"
        }
      }
    ]
  },
  "connections": {
    "Retrieve From RAGFlow": {
      "main": [
        [
          {
            "node": "Decide Relevant Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Retrieved Chunks": {
      "main": [
        [
          {
            "node": "Law Consistency Checker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retrieval Decide": {
      "ai_outputParser": [
        [
          {
            "node": "Decide Relevant Content",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Decide Relevant Content": {
      "main": [
        [
          {
            "node": "Filter Retrieved Chunks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Decide Relevant Content",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Law Consistency Checker",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Law Consistency Checker": {
      "main": [
        [
          {
            "node": "Analyze Answers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Law Consistency Checker",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Answers": {
      "main": [
        [
          {
            "node": "Convert to HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to HTML": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        []
      ]
    },
    "User Query": {
      "main": [
        [
          {
            "node": "Retrieve From RAGFlow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1f573e3a-a7cd-4af9-8619-6b8a96c96026",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f75a8e70ea2778b34279bc302d4c7d3e2f1db8ecda945851eb32c430c7dee3f7"
  },
  "id": "SRVZzy6FJ4m7dQYJ",
  "tags": []
}